<?php
/**
 * @file
 * General functions and hook implementations.
 *
 * @see https://github.com/reevoo/reevoomark-php-api
 */

/**
 * Implements hook_libraries_info().
 */
function reevoomark_libraries_info() {
  return array(
    'reevoomark-php-api' => array(
      'title' => 'PHP API for embedded reevoomarks',
      'vendor url' => 'http://www.reevoo.com',
      'download url' => 'https://github.com/reevoo/reevoomark-php-api',
      'path' => 'lib',
      'version arguments' => array(
        'file' => 'lib/reevoo_mark.php',
        'pattern' => '~"ReevooMark PHP Widget/(.*?)"~',
        'lines' => 200,
      ),
      'files' => array(
        'php' => array(
          'reevoo_mark.php',
        ),
      ),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function reevoomark_menu() {
  $items['admin/config/system/reevoomark'] = array(
    'title' => 'ReevooMark',
    'description' => 'Change the setting configuration when using ReevooMark.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('reevoomark_admin_settings'),
    'access arguments' => array('administer reevoomark settings'),
    'file' => 'reevoomark.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function reevoomark_permission() {
  return array(
    'administer reevoomark settings' => array(
      'title' => t('Administer ReevooMark settings'),
      'description' => t('Administer ReevooMark settings.'),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function reevoomark_theme() {
  return array(
    'reevoomark_body' => array(
      'variables' => array(
        'class' => NULL,
        'body' => NULL,
      ),
    ),
    'reevoomark_overall_score' => array(
      'variables' => array('score' => NULL),
    ),
    'reevoomark_best_price' => array(
      'variables' => array(
        'currency_symbol' => NULL,
        'price' => NULL,
        'url' => NULL,
      ),
    ),
    'reevoomark_read_reviews_button' => array(
        'variables' => array(
          'score' => NULL,
          'scores_count' => NULL
         ),
     ),
  );
}

/**
 * Implements hook_block_info().
 */
function reevoomark_block_info() {
  $blocks['first_two_reviews'] = array(
    'info' => t('ReevooMark first two reviews'),
    'cache' => DRUPAL_CACHE_PER_PAGE,
  );
  $blocks['embeddable_reviews'] = array(
    'info' => t('ReevooMark embeddable reviews'),
    'cache' => DRUPAL_CACHE_PER_PAGE,
  );
  $blocks['offers'] = array(
    'info' => t('ReevooMark offers'),
    'cache' => DRUPAL_CACHE_PER_PAGE,
  );
  $blocks['overall_score'] = array(
    'info' => t('ReevooMark overall score'),
    'cache' => DRUPAL_CACHE_PER_PAGE,
  );
  $blocks['best_price'] = array(
    'info' => t('ReevooMark best price'),
    'cache' => DRUPAL_CACHE_PER_PAGE,
  );
  $blocks['read_reviews_button'] = array(
    'info' => t('ReevooMark read reviews button'),
    'cache' => DRUPAL_CACHE_PER_PAGE,
  );
  $blocks['read_reviews_button_popup'] = array(
    'info' => t('ReevooMark read reviews button. Opens in a javascript popup.'),
    'cache' => DRUPAL_CACHE_PER_PAGE,
  );
  return $blocks;
}

/**
 * Get the value for the given variable_name.
 *
 * Provides consistent defaults.
 *
 * @param string $variable_name
 *   The variable name for the service url.
 */
function reevoomark_variable($variable_name) {
  switch ($variable_name) {
    case 'reevoomark_retailer':
      return variable_get('reevoomark_retailer', '');

    case 'reevoomark_cache_age':
      return variable_get('reevoomark_cache_age', 3600);

    case 'reevoomark_currency_symbol':
      return variable_get('reevoomark_currency_symbol', '£');

    case 'reevoomark_url_first_two_reviews':
      return variable_get('reevoomark_url_first_two_reviews', 'http://mark.reevoo.com/reevoomark/first_two_reviews.html');

    case 'reevoomark_url_embeddable_reviews':
      return variable_get('reevoomark_url_embeddable_reviews', 'http://mark.reevoo.com/reevoomark/embeddable_reviews');

    case 'reevoomark_url_offers':
      return variable_get('reevoomark_url_offers', 'http://mark.reevoo.com/widgets/offers');

    case 'reevoomark_css_best_offers':
      return variable_get('reevoomark_css_best_offers', 'http://mark.reevoo.com/stylesheets/best_offers/base.css');

    case 'reevoomark_css_embedded_reviews':
      return variable_get('reevoomark_css_embedded_reviews', 'http://mark.reevoo.com/stylesheets/reevoomark/embedded_reviews.css');

  }
}

/**
 * Returns a renderable array of the content from the Reevoo service.
 *
 * Useful for when you dont want a block,
 * just the content of that block for use in templates etc.
 */
function reevoomark_get_content($delta) {
  $block = reevoomark_block_view($delta);

  if (!empty($block['content'])) {
    return $block['content'];
  }

  return FALSE;
}

/**
 * Implements hook_block_view().
 */
function reevoomark_block_view($delta = '') {
  $block = array();

  $sku = reevoomark_sku();
  if (empty($sku)) {
    // No sku so no review.
    return $block;
  }

  switch ($delta) {
    case 'overall_score':
      if ($mark = reevoomark_get_service(reevoomark_variable('reevoomark_url_first_two_reviews'), $sku)) {

        if ($score = $mark->getOverallScore()) {
          $build = array(
            '#score' => $score,
            '#theme' => 'reevoomark_overall_score',
          );
          reevoomark_add_js($build);
          reevoomark_add_css($build, $delta);
          $block['content'] = $build;
        }

      }
      break;

    case 'best_price':
      if ($mark = reevoomark_get_service(reevoomark_variable('reevoomark_url_offers'), $sku)) {

        if ($price = $mark->getBestPrice()) {
          $build = array(
            '#currency_symbol' => variable_get('reevoomark_currency_symbol', '£'),
            '#price' => $price,
            '#url' => $mark->getBestPriceLink(),
            '#theme' => 'reevoomark_best_price',
          );
          reevoomark_add_js($build);
          reevoomark_add_css($build, $delta);
          $block['content'] = $build;
        }

      }
      break;

    case 'first_two_reviews':
    case 'embeddable_reviews':
    case 'offers':
      if ($mark = reevoomark_get_service(reevoomark_variable('reevoomark_url_' . $delta), $sku)) {
        $body = $mark->body();
        if (!empty($body)) {
          $build = array(
            '#body' => $body,
            '#class' => $delta,
            '#theme' => 'reevoomark_body',
          );
          reevoomark_add_js($build);
          reevoomark_add_css($build, $delta);
          $block['content'] = $build;
        }
      }
      break;
    case 'read_reviews_button':
      if ($mark = reevoomark_get_service(reevoomark_variable('reevoomark_url_first_two_reviews'), $sku)) {

        if ($score = $mark->getOverallScore()) {
          $scores_count = $mark->getScoreCount();

          if($scores_count) {
            $build = array(
              '#score' => $score,
              '#scores_count' => $scores_count,
              '#theme' => 'reevoomark_read_reviews_button',
            );
            reevoomark_add_js($build);
            reevoomark_add_css($build, $delta);
            $block['content'] = $build;
          }

        }
      }
      break;
    case 'read_reviews_button_popup':
      if ($trkref = reevoomark_variable('reevoomark_retailer')) {
        $build = array('#markup' => l(t('Reevoo reviews'), "http://mark.reevoo.com/partner/$trkref/$sku", array('attributes' => array('class' => array('reevoomark')))));
        reevoomark_add_js($build, $trkref);
        $block['content'] = $build;
      }
      break;
  }

  return $block;
}

/**
 * Add asyncronous js to the renderable array.
 */
function reevoomark_add_js(&$renderable_array) {
  // Only add once per page
  static $reevoo_js;
  if (empty($reevoo_js)) {
    if ($trkref = reevoomark_variable('reevoomark_retailer')) {
      $reevoo_js = "
        (function() {
          var myscript = document.createElement('script');
          myscript.type = 'text/javascript';
          myscript.src=('http://mark.reevoo.com/reevoomark/$trkref.js?async=true');
          var headTag = document.getElementsByTagName('head')[0];
          headTag.appendChild(myscript);
        })();
      ";
      $renderable_array['#attached']['js'] = array($reevoo_js => array('type' => 'inline'));
    }
  }
}

/**
 * Add the js to the renderable array.
 */
function reevoomark_add_css(&$renderable_array, $delta) {
  switch ($delta) {
    case 'offers':
    case 'best_price':
      $renderable_array['#attached']['css'][] = reevoomark_variable('reevoomark_css_best_offers');
      break;

    default:
      $renderable_array['#attached']['css'][] = reevoomark_variable('reevoomark_css_embedded_reviews');
      break;
  }
}

/**
 * Get the sku of the product whose reviews are wanted.
 *
 * Defaults to nid of current page.
 *
 * @see hook_reevoomark_sku_alter()
 */
function reevoomark_sku() {
  $sku = '';

  $menu_object = menu_get_object();
  if (!empty($menu_object->nid)) {
    $sku = $menu_object->nid;
  }
  drupal_alter('reevoomark_sku', $sku);

  return $sku;
}

/**
 * Allow other modules to provide overriding classes.
 */
function reevoomark_load_classes() {
  static $info;

  if (!is_array($info)) {
    // The service class.
    // The class must implement ReevooMarkServiceInterface.
    // Based on extending the ReevooMark class from the library.
    $info['service_class'] = variable_get(
      'reevoomark_service_class',
      array(
        'file' => 'ReevooMarkService',
        'module' => 'reevoomark',
        'class' => 'ReevooMarkService',
      )
    );

    // The document class.
    // Based on extending the ReevooMarkDocument class from the library.
    $info['document_class'] = variable_get(
      'reevoomark_document_class',
      array(
        'file' => 'ReevooMarkServiceDocument',
        'module' => 'reevoomark',
        'class' => 'ReevooMarkServiceDocument',
      )
    );

  }

  // Load the libray classes.
  if (($library = libraries_load('reevoomark-php-api')) && !empty($library['loaded'])) {

    // Load the extending class files if not already loaded.
    foreach ($info as $class_info) {
      if (!class_exists($class_info['class']) && isset($class_info['file']) && isset($class_info['module'])) {
        module_load_include('php', $class_info['module'], $class_info['file']);
      }
    }

    return $info;
  }

  return FALSE;
}

/**
 * Get the ReevooMarkService object.
 *
 * @return ReevooMarkServiceInterface
 *   The service object.
 */
function reevoomark_get_service($url, $sku) {
  // In CURL < 7.16.2 this constant is not defined.
  if (!defined('CURLOPT_TIMEOUT_MS')) {
    define('CURLOPT_TIMEOUT_MS', 155);
  }

  $url = trim($url);
  $sku = trim($sku);
  $retailer = trim(reevoomark_variable('reevoomark_retailer'));

  if ($info = reevoomark_load_classes()) {
    $class = $info['service_class']['class'];

    $options = array(
      'cache_age' => reevoomark_variable('reevoomark_cache_age'),
    );

    if (isset($info['document_class']['class'])) {
      // Use the module's document class, with extra options.
      $options += array(
        'document_class' => $info['document_class']['class'],
      );
    }

    return new $class($url, $retailer, $sku, $options);
  }

  return FALSE;
}

/**
 * Returns HTML from Reevoo wrapped in a div.
 *
 * @param array $variables
 *   An associative array containing:
 *   - class: A class name that will be prefixed by 'reevoomark_'.
 *   - body: The html returned by Reevoo.
 *
 * @ingroup themeable
 */
function theme_reevoomark_body($variables) {
  return '<div class="reevoomark_' . $variables['class'] . '">' . $variables['body'] . '</div>';
}

/**
 * Returns the best price wrapped in a div.
 *
 * @param array $variables
 *   An associative array containing:
 *   - price: The best price.
 *   - url: The url of where to by the product at that price.
 *
 * @ingroup themeable
 */
function theme_reevoomark_best_price($variables) {
  $link = l($variables['currency_symbol'] . $variables['price'], $variables['url']);
  return '<div class="reevoomark_best_price">Buy it now for: ' . $link . '</div>';
}

/**
 * Returns the overall score wrapped in a div.
 *
 * @param array $variables
 *   An associative array containing:
 *   - score: The score.
 *
 * @ingroup themeable
 */
function theme_reevoomark_overall_score($variables) {
  return '<div class="reevoomark_overall_score">
    <span class="label">Overall Score</span> <span class="score">' . $variables['score']
    . '</span></div>';
}

/**
 * Returns the overall score and the number of reviews
 * @param array $variables
 *   An associative array containing:
 *     - score: The score
 *     - scores_count : Total number of scores
 */
function theme_reevoomark_read_reviews_button($variables) {
  return $variables['score'].' out of 10. '.l('Read '.$variables['scores_count'].' reviews', current_path(), array('fragment' => 'reevoomark_reviews'));
}
